services:
  db:
    build:
      context: ../db
      dockerfile: Dockerfile
    container_name: culf_db
    restart: always
    volumes:
      - ../db/data:/var/lib/postgresql/data
      - ../db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ../db/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "5433:5432"
    env_file:
      - ../db/.env
    environment:
      - TZ=Asia/Seoul
      - POSTGRES_TZ=Asia/Seoul
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    networks:
      - culf-network

  backend:
    container_name: culf_backend
    platform: linux/x86_64
    build:
      context: ../backend
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    volumes:
      - ../backend:/app
    ports:
      - 8000:8000
    env_file:
      - ../backend/.env.docker
    environment:
      - ENV=docker
    depends_on:
      - db
    networks:
      - culf-network

  frontend:
    container_name: culf_frontend
    platform: linux/x86_64
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    restart: unless-stopped
    tty: true
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - 5173:5173
    env_file:
      - ../frontend/.env.development
    networks:
      - culf-network

  admin:
    container_name: culf_admin
    build:
      context: ../admin
      dockerfile: Dockerfile
    volumes:
      - ../admin:/app
      - /app/node_modules
      - /app/dist
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - culf-network

networks:
  culf-network:
    driver: bridge
